{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","for","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","toLowerCase","split","join","length","App","setmode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e62f638a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">about</Link>\r\n                        </li> */}\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                Dropdown\r\n                            </a>\r\n                            <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n                                <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n                                <li><hr className=\"dropdown-divider\" /></li>\r\n                                <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-info\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleClick =  () =>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleLowClick =  () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    const handleclearClick =  () =>{\r\n        let newText = '';\r\n        setText(newText)\r\n    }\r\n    const handleOnChange =  (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleExtraspaces =  () =>{\r\n        let newText= text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n    const[text,setText] = useState(\"\");\r\n    // setText(\"Now text will change\");\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'White':'black'}}>\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n                <label for=\"myBox\" className=\"form-label\">Example textarea</label>\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='dark'?'black':'white' , color:props.mode==='dark'?'White':'black'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClick}>Convert To Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert To lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleclearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraspaces}>Remove ExtraSpaces</button>\r\n        </div>\r\n        <div className=\"container my-2\" style={{color:props.mode==='dark'?'White':'black'}}>\r\n            <h3>Your text summary</h3>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nlet name = \"Nikita\";\nfunction App() {\n  const [mode, setmode] = useState('light');\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#212529';\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <div className=\"container my-3\">\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm heading=\"Entre your output\" mode={mode} />\n          {/* </Route>\n        </Switch> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}